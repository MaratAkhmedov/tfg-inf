{% extends "base_with_navbar.html.twig" %}
{% block stylesheets %}
	{{ parent() }}

	<style>
		.carousel-indicators button.thumbnail {
			width: 100px;
		}
		.carousel-indicators button.thumbnail:not(.active) {
			opacity: 0.7;
		}
		.carousel-indicators {
			position: static;
		}
		.carousel-inner {
			height: 0;
			padding-bottom: 50%; /* this sets carousel aspect ratio (4:1 here) */
		}

		.carousel-indicators img {
			height: 50px; /* Bootstrap handles width already */
			object-fit: cover; /* or 'contain' if you want stretch instead of crop */
		}

		.carousel-item {
			position: absolute !important; /* Bootstrap is insistent */
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
		}

		.carousel-item img {
			height: 100%; /* Bootstrap handles width already */
			object-fit: cover; /* or 'contain' if you want stretch instead of crop */
		}

		@media(max-width: 575px) {
			.carousel-inner {
				height: 0;
				padding-bottom: 70%; /* this sets carousel aspect ratio (4:1 here) */
			}
		}

		@media screen and(min-width: 992px) {
			.carousel {
				max-width: 70%;
				margin: 0 auto;
			}
		}

		#map {
			height: 500px; /* Adjust the height as needed */
			width: 100%;
		}

		.disabled-element-icon {
			opacity: 0.15;
		}

		.icon {
			color: #d95d59;
		}

		#owner-data-block a {
			text-decoration: none;
		}
	</style>

{% endblock %}

{% set propertyName = ('property.type.' ~ property.type.name)| trans ~ ' ' ~ 'grammar.prepositions.in'| trans ~ ' ' ~ property.name %}

{% block title %}
	{{ propertyName }}
{% endblock %}

{% block content %}
	<div class="container pt-2">
		{% set breadcrumbs = [
            {'label': 'breadcrumbs.home', 'link': 'default'},
            {'label': 'property.form.properties', 'link': 'referrer'},
            {'label': propertyName|lower|u.truncate(20, '...', false)}
        ] %}

		{% include '/breadcrumbs.html.twig' with {'breadcrumbs': breadcrumbs} %}

		<div class="row mb-5">
			<div class="col-lg-8 col-xl-9">
				<div id="property-carouserl" class="carousel slide">
					<div class="carousel-inner">
						{% for photo in property.photos %}
							<div class="carousel-item {{loop.first ? 'active' : ''}}">
								<img src="{{ asset(photo.url) }}" class="d-block w-100" alt="...">
							</div>
						{% endfor %}
					</div>
					{% if property.photos|length > 1 %}
						<div class="carousel-indicators">
							{% for i, photo in property.photos %}
								<button type="button" data-bs-target="#property-carouserl" data-bs-slide-to="{{i}}" class="{{loop.first ? 'active' : ''}} thumbnail" aria-current="true" aria-label="Slide {{i+1}}">
									<img src="{{ asset(photo.url) }}" class="d-block w-100" alt="...">
								</button>
							{% endfor %}
						</div>
					{% endif %}
				</div>


				<div class="content">
					<h1>{{ propertyName }}</h1>

					{% set address = property.address %}
					{% set city = address.city|default([]) %}
					{% set province = city.province|default([]) %}
					{% set autonomousComunity = province.autonomousComunity|default([]) %}

					<div class="address pt-3">
						{{ autonomousComunity.name|default("") }}
						|
						{{ province.name|default("") }}
						|
						{{ city.name|default("") }}
						|
						{{ address.street|default("") }}
					</div>


					<h1 class="pt-4">{{property.price|format_currency('EUR', {rounding_mode: 'floor'})}}</h1>

					<div class="d-flex flex-row justify-content-start gap-1 pt-4">
						<div class="d-flex justify-content-start gap-2 p-1">
							<div style="width:2rem; heigth: 2rem;">{{ ux_icon('guidance:hotel-room-2') }}</div>
							<span>{{property.numRooms ~ ' ' ~ 'property.show.room_units'|trans }}</span>
						</div>
						<div class="d-flex justify-content-start gap-2 p-1">
							<div style="width:2rem; heigth: 2rem;">{{ux_icon('mdi:bathroom')}}</div>
							<span>{{property.numBathrooms ~ ' ' ~ 'property.show.bathroom_units'|trans }}</span>
						</div>
						<div class="d-flex justify-content-start gap-2 p-1">
							<div style="width:2rem; heigth: 2rem;">{{ ux_icon('mdi:floor-plan') }}</div>
							<span>{{property.square ~ ' ' ~ 'mÂ²'}}</span>
						</div>
						<div class="d-flex justify-content-start gap-2 p-1">
							<div style="width:2rem; heigth: 2rem;">{{ ux_icon('mdi:ladder') }}</div>
							<span>
								{{ 'property.show.floor'|trans({'%numFloor%': property.floor}) }}
							</span>
						</div>
					</div>

					{% if property.rules is not empty %}
						<div class="row pt-4">
							<div class="rules-card">
								<div class="rules-title">
									<h2>{{ 'property.show.rules_title'|trans }}</h2>
								</div>
								<div class="rules">
									<div class="d-flex flex-wrap justify-content-between justify-content-md-start">
										{% for rule in property.rules %}
											<div style="" class="p-3 text-center icon-container d-flex flex-column align-items-center">
												<div class="element-icon icon align-self-center" style="height: 100px; width:100px;">
													{{ ux_icon(rule.icon) }}
												</div>
												<div class="">{{rule.label|trans}}</div>
											</div>
										{% endfor %}
										{% set disabledRules = allRules|filter(item => not (item.id in property.rules|map(attr => attr.id))) %}
										{% for rule in disabledRules %}
											<div style="" class="p-3 text-center icon-container d-flex flex-column align-items-center">
												<div class="disabled-element-icon icon align-self-center" style="height: 100px; width:100px;">
													{{ ux_icon(rule.icon) }}
												</div>
												<span class="">{{rule.label|trans}}</span>
											</div>
										{% endfor %}
									</div>
								</div>
							</div>
						</div>
					{% endif %}

					{% if property.attributeProperties is not empty %}
						<div class="row pt-4">
							<div class="rules-card col-md-12">
								<div class="rules-title">
									<h2>{{ 'property.show.property_attributes'|trans }}</h2>
								</div>
								<div class="rules row">
									<div class="d-flex flex-wrap justify-content-between justify-content-md-start">
										{% for attribute in property.attributeProperties %}
											<div style="" class="p-3 text-center icon-container d-flex flex-column align-items-center">
												<div class="element-icon icon" style="height: 100px; width:100px;">
													{{ ux_icon(attribute.icon) }}
												</div>
												<span class="">{{attribute.label|trans}}</span>
											</div>
										{% endfor %}
										{% set disabledPropertyAttributes = allPropertyAttributes|filter(item => not (item.id in property.attributeProperties|map(attr => attr.id))) %}
										{% for attribute in disabledPropertyAttributes %}
											<div style="" class="p-3 text-center icon-container d-flex flex-column align-items-center">
												<div class="disabled-element-icon icon" style="height: 100px; width:100px;">
													{{ ux_icon(attribute.icon) }}
												</div>
												<span class="">{{attribute.label|trans}}</span>
											</div>
										{% endfor %}
									</div>
								</div>
							</div>
						</div>
					{% endif %}

					{% if property.room is not empty %}
						<div class="row pt-4">
							<div class="rules-card col-md-12">
								<div class="rules-title">
									<h2>{{ 'property.show.property_room_attributes'|trans }}</h2>
								</div>
								<div class="rules row">
									<div class="d-flex flex-wrap justify-content-between justify-content-md-start">
										{% if property.room.bedType.value == 'individual' %}
											<div style="" class="p-3 text-center icon-container d-flex flex-column align-items-center">
												<div class="element-icon icon" style="height: 100px; width:100px;">
													{{ ux_icon('mdi:bed-queen-outline') }}
												</div>
												<span class="">{{'room.form.bed_type'|trans}}
													{{property.room.bedType.value|trans}}</span>
											</div>
										{% elseif property.room.bedType.value == 'double' %}
											<div style="" class="p-3 text-center icon-container d-flex flex-column align-items-center">
												<div class="element-icon icon" style="height: 100px; width:100px;">
													{{ ux_icon('mdi:bed-king-outline') }}
												</div>
												<span class="">{{'room.form.bed_type'|trans}}
													{{property.room.bedType.value|trans}}</span>
											</div>
										{% endif %}
										{% for attribute in property.room.attributeRooms %}
											<div style="" class="p-3 text-center icon-container d-flex flex-column align-items-center">
												<div class="element-icon icon" style="height: 100px; width:100px;">
													{{ ux_icon(attribute.icon) }}
												</div>
												<span class="">{{attribute.label|trans}}</span>
											</div>
										{% endfor %}
										{% set disabledRoomAttributes = allRoomAttributes|filter(item => not (item.id in property.room.attributeRooms|map(attr => attr.id))) %}
										{% for attribute in disabledRoomAttributes %}
											<div style="" class="p-3 text-center icon-container d-flex flex-column align-items-center">
												<div class="disabled-element-icon icon" style="height: 100px; width:100px;">
													{{ ux_icon(attribute.icon) }}
												</div>
												<span class="">{{attribute.label|trans}}</span>
											</div>
										{% endfor %}
									</div>
								</div>
							</div>
						</div>
					{% endif %}

					{% if property.description is not empty %}
						<h3 class="pt-4">{{ 'property.show.description_title'|trans }}</h3>
						<div class="m-3">
							{{property.description|raw}}

						</div>
					{% endif %}


					<div class="row pt-3">
						<div class="map-title">
							<h2>{{ 'property.show.map_title'|trans }}</h2>
						</div>
						<div style="" class="w-100 pr-0">
							<div id="map"></div>
						</div>
					</div>
				</div>
			</div>

			<div class="pt-4 pt-lg-0 col-lg-4 col-xl-3">
				<div style="top: 80px;" class="sticky-lg-top">
					<div class="card">
						<div
							class="card-body">
							{# <p class="card-body">With supporting text below as a natural lead-in to additional content.</p> #}
							<div class="d-flex flex-column">
								<h5 class="card-title">
									{{ ('property.type.' ~ property.type.name)|trans }}
									{{'grammar.prepositions.in' | trans}}
									{{ property.name }}</h5>
								<h3 class="card-title price pt-3">{{property.price|format_currency('EUR', {rounding_mode: 'floor'})}}</h3>
							</div>

							<div class="d-flex flex-row justify-content-start gap-4 pt-3">
								<div class="d-flex justify-content-start gap-2 p-1">
									<div style="width:1.4rem; heigth: 1.4rem;">{{ ux_icon('guidance:hotel-room-2') }}</div>
									<span>{{property.numRooms ~ ' ' ~ 'property.show.room_units'|trans }}</span>
								</div>
								<div class="d-flex justify-content-start gap-2 p-1">
									<div style="width:1.4rem; heigth: 1.4rem;">{{ux_icon('mdi:bathroom')}}</div>
									<span>{{property.numBathrooms ~ ' ' ~ 'property.show.bathroom_units'|trans }}</span>
								</div>
							</div>

							<div class="d-flex flex-row justify-content-start gap-4">
								<div class="d-flex justify-content-start gap-2 p-1">
									<div style="width:1.4rem; heigth: 1.4rem;">{{ ux_icon('mdi:floor-plan') }}</div>
									<span>{{property.square ~ ' ' ~ 'mÂ²'}}</span>
								</div>
								<div class="d-flex justify-content-start gap-2 p-1">
									<div style="width:1.4rem; heigth: 1.4rem;">{{ ux_icon('mdi:ladder') }}</div>
									<span>
										{{ 'property.show.floor'|trans({'%numFloor%': property.floor}) }}
									</span>
								</div>
							</div>

							<div class="d-flex flex-column justify-content-center">
								<div id="owner-data-spinner" class="d-flex justify-content-center align-items-center">
									<div style="display: none;" class="spinner m-4 spinner-grow text-primary" role="status">
										<span class="visually-hidden">Loading...</span>
									</div>
								</div>
								<div style="display: none;" id="owner-data-block" class="p-2 mt-3">
									<div>
										<strong>{{ 'owner.form.first_name' | trans }}:
										</strong>
										<span id="owner-data-name"></span>
									</div>
									<div>
										<strong>{{ 'owner.form.phone' | trans }}:
										</strong>
										<span id="owner-data-phone"></span>
									</div>
									<div>
										<strong>{{ 'owner.form.email' | trans }}:
										</strong>
										<span id="owner-data-email"></span>
									</div>
								</div>

								<button id="owner-data-button" role="button" class="btn btn-primary mt-3 w-100">{{ 'property.show.contact_with_owner'|trans }}</button>
							</div>
						</div>
					</div>
				</div>

			</div>
		</div>


	</div>
{% endblock %}


{% block javascript %}<!-- parse-ignore-start -->
	<script src="https://maps.googleapis.com/maps/api/js?key={{app.request.server.get('GOOGLE_MAP_API_KEY')}}&libraries=places"></script>
	<script src="{{ asset('js/map_styles.js') }}"></script>

	<script>
		document.addEventListener('DOMContentLoaded', (event) => { // Coordinates (latitude and longitude)
		const lat = {{ property.address.latitude }};
		const lng = {{ property.address.longitude }};

		// Initialize the map
		const map = new google.maps.Map(document.getElementById('map'), {
			center: {
				lat: lat,
				lng: lng
			},
			zoom: 14, // Adjust the zoom level as needed
			styles: mapStyles,
			zoomControl: false, // Deshabilitar botones de zoom
			streetViewControl: false, // Deshabilitar Street View
			mapTypeControl: false, // Deshabilitar el control de tipo de mapa
			fullscreenControl: false, // Deshabilitar el control de pantalla completa
			gestureHandling: 'greedy' // Permitir el desplazamiento y zoom sin la tecla CTRL
		});

		// Add a marker at the specified coordinates
		const marker = new google.maps.Marker({
			position: {
				lat: lat,
				lng: lng
			},
			map: map,
			title: 'Marker at the specified coordinates'
			});
		});
	</script>


	<script>
	$(document).ready(function() {
		$('#owner-data-button').click(function(e) {
			console.log("owner-data-button clicked")
			e.preventDefault(); // Evita que se ejecute el comportamiento por defecto del enlace

			$('#owner-data-spinner .spinner').show()
			$('#owner-data-button').hide()

			const ownerId = "{{property.user.id}}"

			console.log("route", Routing.generate('app_get_owner_contact_data', { id: ownerId }))

			// Realiza la solicitud AJAX a Symfony backend
			$.ajax({
				url: Routing.generate('app_get_owner_contact_data', { id: ownerId }),
				method: 'GET', // MÃ©todo HTTP (puede ser POST tambiÃ©n)
				dataType: 'json', // Tipo de datos que esperas recibir del backend
				success: function(data) {
					$('#owner-data-name').html(data.lastName + ' ' + data.firstName)
					$('#owner-data-phone').html(`<a class href="tel:${data.phone}">${data.phone}</a>`)
					$('#owner-data-email').html(`<a class href="mailto:${data.phone}">${data.phone}</a>`)
					
					$('#owner-data-spinner .spinner').hide()
					$('#owner-data-block').show()
				},
				error: function(xhr, status, error) {
					if (xhr.status === 401) {
						var response = JSON.parse(xhr.responseText);
						if (response.redirect) {
							window.location.href = response.redirect;
						}
					}else{
						$('#owner-data-button').show()
						console.error('Error en la solicitud AJAX:', status, error);
					}
				}
			});
		});
	});
	</script>
{% endblock %}
